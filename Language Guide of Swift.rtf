{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 LucidaGrande;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue;\f4\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red83\green83\blue83;\red38\green38\blue38;
\red255\green255\blue255;\red242\green242\blue242;\red50\green91\blue97;\red99\green77\blue192;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c40000\c40000\c40000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c100000\c100000\c100000;\cssrgb\c96078\c96078\c96078;\cssrgb\c24706\c43137\c45490;\cssrgb\c46667\c40000\c80000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid702\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1802\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1803\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1804\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2880\lin2880 }{\listname ;}\listid19}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl440\partightenfactor0

\f0\b\fs36 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 The Basics
\fs24 \ulnone :-
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Int, Float, Double, Bool, String\uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Collection Types - Array, Set, Dictionary\uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Tuples, Optionals\uc0\u8232 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Type-safe Language\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	Constants and Variables
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls2\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Declaration - var, let\uc0\u8232 \
\ls2\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
multiple declarations on a single line possible\uc0\u8232 \
\ls2\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Type Annotations - necessary when no initial value\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Naming Constants and Variables
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls3\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
can't use the same name again nor change its type or constancy\uc0\u8232 \
\ls3\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Backtick for keyword name usage\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Printing
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl320\partightenfactor0
\ls4\ilvl1
\f2\fs28 \cf3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
print(_:separator:terminator:)
\f3 \cf4 \cb5 \'a0\cb1 , both parameters have default values.
\f0\fs24 \cf2 \uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl340\partightenfactor0
\ls4\ilvl1
\f3\fs28 \cf4 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
change terminator to break the line acc to preference
\f0\fs24 \cf2 \uc0\u8232 \
\ls4\ilvl1
\f3\fs28 \cf4 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
string interpolation - \\()
\f0\fs24 \cf2 \uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	Comments
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls5\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
//, /* */, Nested multiline\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 	
\i Semicolon
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls6\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
optional, necessary for multiple statements on single line\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Integers
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls7\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
signed and unsigned in 8,16,32,64 bits\uc0\u8232 \
\ls7\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Integer bounds - min, max properties\uc0\u8232 \
\ls7\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Int, UInt\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Floating - point
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls8\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Float(6), Double(15)-preferred\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Type Safety and Type Inference
\i0 \
	
\i Numeric Literals
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls9\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Integer :\'a0
\i decimal
\i0 \'a0- no prefix,\'a0
\i binary
\i0 -
\f2\fs21\fsmilli10800 \cf3 0b
\f0\fs24 \cf2  prefix, 
\i octal
\i0  -\'a0
\f2\fs21\fsmilli10800 \cf3 0o
\f0\fs24 \cf2 \'a0prefix, \'a0
\i hexadecimal
\i0 \'a0-\'a0
\f2\fs21\fsmilli10800 \cf3 0x
\f0\fs24 \cf2 \'a0prefix\uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl340\partightenfactor0
\ls9\ilvl1
\f3\fs28 \cf4 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
Floating-point: decimal (with no prefix), or hexadecimal (with a\cb5 \'a0
\f2 \cf3 \cb1 0x
\f3 \cf4 \cb5 \'a0\cb1 prefix), optional exponent -e(decimal) and p(hexadecimal)
\f0\fs24 \cf2 \uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls9\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
extra formatting - padded zeroes and underscore\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Numeric Type conversion
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls10\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Integer Conversions -\'a0
\f2\fs28 \cf3 SomeType(ofInitialValue)
\f3 \cf4 \cb5 \'a0\cb1 is the default way to call the initializer of a Swift type
\f0\fs24 \cf2 \uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl300\partightenfactor0
\ls10\ilvl1
\f3 \cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
Integer and Floating-Point Conversion : explicit conversion
\f0 \uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl340\partightenfactor0
\ls10\ilvl1
\f3\fs28 \cf4 \cb6 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f3 	}\expnd0\expndtw0\kerning0
The rules for combining numeric constants and variables are different from the rules for numeric literals.
\f0\fs24 \cf2 \cb1 \uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	Type Aliases
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls11\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
typealias keyword, all property can be used\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 	 
\i Boolean
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls12\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Bool - true, false\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 	
\i Tuples
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls13\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
multiple values of any type, for temporary usage\uc0\u8232 \
\ls13\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
Usage - decompose, underscore, name when define, index numbers - dot operator\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	Optionals
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls14\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
initializer fails\uc0\u8232 \
\ls14\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
nil value - assign to optional, default value for optionals\uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl320\partightenfactor0
\ls14\ilvl1
\f2\fs28 \cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
use \\(\cf7 optionalNumber\cf4 \cb5 !\cb1 ) after checking it's not null
\f0\fs24 \cf2 \uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 	 
\i Optional Binding
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls15\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
to use the optional value after checking, syntax : if-let/var\uc0\u8232 \
\ls15\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
many optional binding and Boolean conditions separated by comma\uc0\u8232 \
\ls15\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
implicitly unwrapped optionals - will always have a value, use with ! : variab!=val and use without ! afterwards, can be used like a normal optional\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	Error Handling
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls16\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
do-try-catch, throws, throw\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 	\'a0Assertions and preconditions
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls17\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
not for recoverable or expected errors- invalid state\uc0\u8232 \
\ls17\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
assertions in debug, preconditions in debug and production builds\uc0\u8232 \
\ls17\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
debugging with assertions -\'a0
\f3\fs28 \cf4 the\'a0{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/documentation/swift/1541112-assert"}}{\fldrslt 
\f2 \cf8 \ul \ulc8 assert(_:_:file:line:)}}\'a0function
\fs36 ,\'a0
\fs28 the\cb5 \'a0{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/documentation/swift/1539616-assertionfailure"}}{\fldrslt 
\f2 \cf8 \cb1 \ul \ulc8 assertionFailure(_:file:line:)}}\cb1 function
\f0\fs24 \cf2 \uc0\u8232 \
\ls17\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
enforcing preconditions -\'a0
\f3\fs28 \cf4 whenever a condition has the potential to be false, but must\cb5 \'a0
\i \cb1 definitely
\i0 \cb5 \'a0\cb1 be true for your code to continue execution
\f0\fs24 \cf2 \uc0\u8232 \
\ls17\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
precondition(), preconditionFailure()\uc0\u8232 \
\ls17\ilvl1\kerning1\expnd0\expndtw0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
fatalError() - halts executions even in optimisation settings( in unchecked compilation)\uc0\u8232 \
\pard\pardeftab720\sl440\partightenfactor0

\b\fs36 \cf2 \ul Basic Operators:-
\b0\fs24 \ulnone \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls18\ilvl0
\fs28 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Unary,binary,ternary
\fs24 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls18\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Assignment operators\ulnone - tuples too\uc0\u8232 \
\ls18\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Arithmetic Operator\ulnone : \'a0Remainder Operator -\'a0
\f2 \cf3 a\'a0%\'a0b
\f3 \cf2 \cb5 \'a0and\'a0
\f2 \cf3 \cb1 a\'a0%\'a0-b
\f3 \cf2 \cb5 \'a0\cb1 always give the same answer,\'a0
\f0 Unary Minus Operator - prepended before varname too\uc0\u8232 \
\ls18\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Compound assignment operators\ulnone \uc0\u8232 \
\ls18\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Comparison operators\ulnone - left to right, first true comparison- whole true, tuple too if same type or same no. of values\uc0\u8232 \
\ls18\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
T\ul ernary Conditional operator\ulnone \uc0\u8232 \
\ls18\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Nil-coalescing operator\ulnone -\'a0
\f3\fs28 \cf4 (
\f2 \cf3 a\'a0??\'a0b
\f3 \cf4 \cb5 ) unwraps an optional\'a0
\f2 \cf3 \cb1 a
\f3 \cf4 \cb5  if it contains a value, or returns a default value\'a0
\f2 \cf3 \cb1 b
\f3 \cf4 \cb5 \'a0if\'a0
\f2 \cf3 \cb1 a
\f3 \cf4 \cb5 \'a0is 
\f2 \cf3 \cb1 nil, short-circuit evaluation
\f0\fs24 \cf2 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls18\ilvl0
\f4 \cf2 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Range operators\ulnone - closed range operator(a...b - inclusive), half-open range operator(a..<b - b exclusive), one-sided ranges(...b, a..., ..<b) - explicit end\'c2\'a0\cb1 condition, check using contains property
\f0 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls18\ilvl0
\f4 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Logical Operators
\f0 \ulnone \uc0\u8232 \
\pard\pardeftab720\sl420\partightenfactor0

\f4\b\fs36 \cf2 \ul Strings and Characters :-
\b0 \ulnone \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl320\partightenfactor0
\ls19\ilvl0
\fs28 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
String literals - multiline(""" """ - string on new line), backslash(\\) for no line breaks, indentation
\f0\fs24 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls19\ilvl0
\f4 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Special Characters in string literals - escaped special characters, arbitrary unicode scalar value, 
\f3\fs28 \cf4 To include the text\cb5 \'a0
\f2 \cf3 \cb1 """
\f3 \cf4 \cb5 \'a0\cb1 in a multiline string, escape at least one of the quotation marks
\f0\fs24 \cf2 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls19\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Initialising an empty string - "",String(), isEmpty property\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
String Mutability : assign to variable or constant\'a0\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Value Types : new copy is created and used, copy-by-default behaviour\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Working with characters\ulnone : for-in loop on strings, Character type Annotation, Character array to string using String initialiser\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Concatenating Strings\ulnone : +,+=,append() and \ul Characters\ulnone : append(), multiline string literals -linebreak\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul String Interpolation\ulnone : mix using \\(), can't contain escaped backslash, carriage return an line feed\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Unicode:\ulnone  Unicode scalar values(21 bit no.), extended grapheme clusters\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Counting characters\ulnone : count property, extend grapheme clusters don't affect the length\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Accessing and modifying string\ulnone : String Indices - String.Index, startIndex, endIndex, index(before: ), index(after : ), index(_:offsetBy: ), indices property\uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul Inserting and removing\ulnone :\'a0
\f4\fs28 insert(_:at:) - for character,\'a0insert(contentsOf:at:) - string,\'a0remove(at:),\'a0removeSubrange(_:)
\f0\fs24 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls19\ilvl0
\f4 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}
\f0 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 Substrings :\ulnone \'c2\'a0firstIndex(of : ""), performance optimisation\'c2\'a0issue\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls19\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Comparing strings\ulnone :\'c2 
\b string and character equality
\b0 -\'c2\'a0
\fs28 \cf4 \strokec4 equal if their extended grapheme clusters are\cb5 \'c2\'a0
\i \cb1 canonically equivalent -\'c2\'a0
\i0 if they have the same linguistic meaning and appearance, even if they\'e2\'80\'99re composed from different Unicode scalars behind the scenes,\'c2 
\b prefix and suffix equality
\b0 - hasPrefix(_:), hasSuffix(_:)
\fs24 \cf2 \strokec2 \uc0\u8232 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unicode representation of Strings :\'c2\'a0\uc0\u8232 \
\pard\pardeftab720\sl440\partightenfactor0
\ls19\ilvl0
\b\fs36 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Collection Types :
\b0\fs24 \ulnone \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls19\ilvl0
\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Arrays, sets and dictionaries
\fs24 \uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls19\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 implemented as generic collections\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Mutability of Collections
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 depends on assignment to variable or constant\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 immutable is preferred\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Arrays
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 same type values, ordered list\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Array type shorthand syntax :\ulnone \'c2\'a0Array<Element> - shorthand: [Element]\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Empty array creation\ulnone - using initialiser, empty\'c2 \uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Creating Array with default value\ulnone : \'c2\'a0initialiser with repeating(value) and count(size)\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Adding 2 arrays\ulnone : using + with names\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Array creation with array literal\ulnone : in : [,], var,let - for size\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Accessing and modifying array\ulnone :\'c2 \uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .count - length,\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .isEmpty - count=0,\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .append(_:),\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 += [,] - addition assignment operator,\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 subscript syntax-\uc0\u8232 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl280\partightenfactor0
\ls19\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 0 indexed,\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 change range of values too[a...b],\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 insert(_:at:)\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 remove(at:) : holds the removed string\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 removeLast()\uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Iterating over array\ulnone :\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 for-in\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (index,item) in array.enumerated()\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0Sets
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 distinct, same type, unordered\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Hash values for set types\ulnone :\'c2\'a0\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 type must be hashable - basic types, enumeration case values without associated values\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Int value equal for equal objects\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .hashValue\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 custom types - conform to Hashable protocol, conforms to Equatable protocol, conforming implementation of equivalence relation\uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Set type Syntax\ulnone : Set<Element>, no shorthand\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Creating and initialising empty set\ulnone : Set<Element>(), empty - []\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Creating a set with array literal\ulnone :\'c2\'a0\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Accessing and modifying a set :\'c2\'a0\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .count\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .isEmpty\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .insert(_:)\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .remove(_:)\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .removeAll()\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .contains(_:)\uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Iterating over a set\ulnone : for-in, .sorted() - < ordering\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Performing set operations\ulnone :\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 fundamental operation :\uc0\u8232 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl280\partightenfactor0
\ls19\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 a.intersection(b)\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 a.symmetricDifference(b)\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 a.union(b)\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 a.subtracting(b)\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 set membership and equality :\uc0\u8232 \
\pard\tx2380\tx2880\pardeftab720\li2880\fi-2880\sl280\partightenfactor0
\ls19\ilvl3\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ==\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 isSubset(of:)\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 isSuperset(of:)\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 isStrictSubset(of:), isStrictSuperset(of:) - not equal\uc0\u8232 \
\ls19\ilvl3\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 isDisjoint(with:)\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0Dictionaries
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 unordered association of same type of key-value\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Dictionary type shorthand syntax :\ulnone \'c2\'a0Dictionary<Key, Value>, [key:val]\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Creating empty dictionary\ulnone : [type1 : type2](), empty\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Creating dictionary with literal\ulnone : [,]\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Accessing and modifying a dictionary\ulnone :\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .count\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .isEmpty\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 subscript syntax - can request key for which no value exists(optional)\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 updateValue(_:forKey:) - returns old value, optional(value/nil)\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 removeValue(forKey:), assign nil\uc0\u8232 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Iterating over a dictionary :\'c2 \uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 for-in loop, (key, val) tuple,\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 keys, values property\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 use sorted() to iterate in order\uc0\u8232 \
\pard\pardeftab720\sl440\partightenfactor0
\ls19\ilvl0
\b\fs36 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Control Flow :-
\b0\fs24 \ulnone \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0For-in loops
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 arrays\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 dictionaries\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 numeric ranges\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 loop variable implicitly declared in its inclusion in the loop declaration - no var, let\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 underscore for ignoring\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 stride(from:to:by:) to skip unwanted indexes\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 stride(from:through:by:) - for closed ranges\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0While loops
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 while, repeat-while\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0Conditional Statements
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 switch\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 every switch statement must be exhaustive - default optional if exhaustive cases\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 no implicit fall through : break not necessary\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 at least one statement required in each case, use break to ignore the case\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 case-sensitive cases\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 compound case value - multiline too\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 fallthrough keyword\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 interval matching\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 tuples - wildcard pattern\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 multiple switch cases can match same value\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 value bindings : can store value in temporary variables for usage\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 where : check additional conditions in case\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0Control Transfer Statements
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 continue, break, fallthrough, return, throw\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 fall through - fall without checking the case condition\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Labeled Statement : label: keyword, break label, continue label\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0
\i Early Exit
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 syntax : guard condition else\{\} guardedStatement\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 scope of optional binded - whole code after\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 else block should exit the code block of guarded statements through control transfer statements or func calling that doesn't return(ike fatalError()\uc0\u8232 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0\'c2\'a0 \'c2\'a0Checking API Availability
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 syntax : if/guard #available(declaration attributes)\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #available(platformName version, , *) - minimum deployment target on any platform\uc0\u8232 \
\pard\pardeftab720\sl440\partightenfactor0
\ls19\ilvl0
\b\fs36 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec2 Functions
\b0 \ulnone \'c2\'a0:-
\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\ls19\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0 \'c2\'a0\'c2 
\i Defining and calling functions
\i0 \
\ls19\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'c2\'a0 \'c2\'a0\'c2 
\i Function parameters and return values
\i0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\partightenfactor0
\ls19\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 functions without parameters\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function with multiple parameters\uc0\u8232 \
\ls19\ilvl1\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9702 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function without return values :\uc0\u8232 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\partightenfactor0
\ls19\ilvl2\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 actually return special value of type void - empty tuple ()\uc0\u8232 \
\ls19\ilvl2\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u9642 
\f0 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 return value ignore\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls19\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\uc0\u8232 \u8232 \
}